#!$SHELL
export EDITOR="emacsclient -c"
export LESS="$LESS -iRs"
export LC_ALL=
export LC_COLLATE="C"
export VDPAU_NVIDIA_NO_OVERLAY=1

if [[ ! "-iRs" =~ "$LESS" ]] ; then
    export LESS="$LESS -iRs"
fi

#PATH handling
if [[ ! "$PATH" =~ "$HOME/bin" && -d "$HOME/bin" ]] ; then
    PATH="$HOME/bin:$PATH"
fi
if [[ ! "$PATH" =~ "$HOME/.nix-profile/bin" && -d "$HOME/.nix-profile/bin" ]] ; then
    PATH="$HOME/.nix-profile/bin:$PATH"
fi
export GOPATH="$HOME/.go"
if [[ -d "$HOME/.go/bin" && ! "$PATH" =~ "$HOME/.go/bin" ]] ; then
    PATH="$PATH:$HOME/.go/bin"
fi

alias vi='vim'
alias ls='ls --color=auto'
alias grep='grep --colour=auto'
alias x='startx'
alias ta='tmux a -d > /dev/null || tmux'
alias taa='tmux a > /dev/null || tmux'
alias awdb='Xephyr -ac -br -noreset -screen 800:600 :1 & export DISPLAY=":1.0" PS1="\[\e[0;31m\]AWDB ${PS1}" ; sleep 2 && awesome &'
alias undb='killall Xephyr ; export DISPLAY=":0.0" PS1=${PS1##*AWDB }'
alias mtr='mtr --curses'
alias myip='curl icanhazip.com'
alias chroothere='sudo mount -R /dev dev && sudo mount -t proc{,,} && sudo mount -t sys{fs,fs,} && sudo chroot . /bin/bash ; sudo umount dev/* dev sys proc'
alias wifi='sudo wifi-menu'
alias o='xdg-open'
alias aurup='makepkg -S; burp $(source PKGBUILD; echo ${pkgname}-${pkgver}-${pkgrel}.src.tar.gz)'
alias om='nice -n20 ionice -c3 offlineimap; nice -n20 ionice -c3 mu index'
alias t=task
alias to=taskopen

#Games :)
alias megarace='dosbox -conf ~/dosbox/MEGARACE/dosbox-0.74.conf -c "mount c ~/dosbox" -c "mount e ~/dosbox/megarace_cd" -c c: -c "cd MEGARACE" MEGARACE.BAT'
#alias engage=""
#play -n -c1 synth whitenoise lowpass -1 120 lowpass -1 120 lowpass -1 120 gain +14
#play -n -c1 synth whitenoise band 100 20 compand .3,.8 -1,-10 gain +20
#play -n -c1 synth whitenoise band -n 100 20 band -n 50 20 gain +25  fade h 1 864000 1

# Keychain
ssh_keys=$(find ~/.ssh -name id_\* -and \! -name \*.pub)
#gpg_keys=$(gpg -K | grep 'sec ' | awk '{ print $2 }' | cut -d'/' -f 2)
gpg_keys=""

if [[ $EUID -gt 1 ]] ; then
    if [[ -x "$(which keychain)" ]] ; then
        eval "$(keychain --eval -q ~/.ssh/cao_key ${ssh_keys} ${gpg_keys})"
    fi
fi

# Virtualenvwrapper
#if [[ -f "$(which virtualenvwrapper.sh)" ]] ; then
#    export WORKON_HOME=~/.virtualenvs
#    source "$(which virtualenvwrapper.sh)"
#fi
# Deprecated in favor of PyEnv

# PyEnv
#eval "$(pyenv init -)"
#eval "$(pyenv virtualenv-init -)"
# Deprecated in favor of direnv

eval "$(direnv hook $(basename $SHELL))"

# EncFS
if [[ -d ~/Private && -d ~/.Private ]] ; then
    if ! mount | grep "${USER}/Private" > /dev/null ; then
        encfs ~/{.,}Private
    fi
fi

# Nix
if [ -f /etc/profile.d/nix.sh ] ; then
    source /etc/profile.d/nix.sh
fi

d () {
    for word in "$@" ; do
        curl dict://dict.org/d:"${word}" 2> /dev/null | less -FX
    done
}

urxvtcd () {
    urxvtc "$@"
    if [ $? -eq 2 ]; then
        urxvtd -q -o -f
        urxvtc "$@"
    fi
}

toweb () {
    if [[ -n "$1" ]] ; then
        rsync -SHPcavy "$@" og:public_html/
        for x in "$@" ; do
            echo "http://dpflug.udderweb.com/$(basename "${x}" | sed 's/ /%20/g')"
        done
    else
        echo "What should be sent?"
    fi
}

dump () {
    if [[ -n "$1" ]] ; then
        rsync -SHPcavy "$@" uw:dump/
        for x in "$@" ; do
            echo "http://dump.udderweb.com/$(basename "${x}" | sed 's/ /%20/g')"
        done
    else
        echo "What should be sent?"
    fi
}

opng () {
    if [[ -n "$1" ]] ; then
        parallel optipng -o7 -zw32k -p ::: "$@"
    fi
}

wp () {
    if [[ -n "$1" ]] ; then
	for img in "$@" ; do
	    if [[ -z "${img#*.png}" ]] ; then
		opng "$img"
	    elif [[ -z "${img#*.jpg}" ]] ; then
		jpegoptim "$img"
	    fi
	    mv -i "$@" ~/annex/wallpapers
	done
    fi
}

waitfor () {
    while pgrep -f "$1" > /dev/null ; do
	sleep 30
    done
}

sudofor () {
    while pgrep -f "$1" > /dev/null ; do
	sudo -v
	sleep 4m
    done
}

if [[ -a ~/.commonrc_local ]] ; then
    source ~/.commonrc_local
fi
